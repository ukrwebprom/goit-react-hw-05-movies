{"version":3,"file":"static/js/186.1f79ee62.chunk.js","mappings":"+SAEaA,EAAW,mCAAG,oGACAC,EAAAA,EAAAA,IAAU,4FADV,cACjBC,EADiB,yBAEhBA,GAFgB,2CAAH,qDAKXC,EAAU,mCAAG,WAAOC,GAAP,uFACAH,EAAAA,EAAAA,IAAA,6CAAgDG,EAAhD,8CADA,cAChBC,EADgB,yBAEfA,GAFe,2CAAH,sDAKVC,EAAO,mCAAG,WAAOF,GAAP,uFACAH,EAAAA,EAAAA,IAAA,6CAAgDG,EAAhD,sDADA,cACbG,EADa,yBAEZA,GAFY,2CAAH,sDAKPC,EAAU,mCAAG,WAAOJ,GAAP,uFACAH,EAAAA,EAAAA,IAAA,6CAAgDG,EAAhD,sDADA,cAChBK,EADgB,yBAEfA,GAFe,2CAAH,sDAKVC,EAAW,mCAAG,WAAOC,GAAP,uFACDV,EAAAA,EAAAA,IAAA,mGAAsGU,EAAtG,+CADC,cACjBF,EADiB,yBAEhBA,GAFgB,2CAAH,qD,yGCYxB,UA9BgB,WACZ,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOH,EAAP,KAAgBI,EAAhB,KACQT,GAAOU,EAAAA,EAAAA,MAAPV,GAUR,OARAW,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAI,mCAAG,qGACUR,EAAAA,EAAAA,IAAWJ,GADrB,OACHa,EADG,OAETJ,EAAWI,EAAKA,KAAKC,SAFZ,2CAAH,qDAIVF,GACH,GAAE,CAACZ,KAGA,8BACCK,EAAQU,QACT,wBACKV,EAAQW,KAAI,gBAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,QAASlB,EAAnB,EAAmBA,GAAnB,OACT,2BACI,wBAAG,oCAAYiB,QACf,uBAAIC,MAFClB,EADA,OAQf,sEAIT,C","sources":["Utils/MovieDB.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getTrending = async () => {\n    const trending = await axios.get('https://api.themoviedb.org/3/trending/movie/day?api_key=6d41b19df2a832eaff610613527f11cf');\n    return trending;\n}\n\nexport const getDetails = async (id) => {\n    const details = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=6d41b19df2a832eaff610613527f11cf`);\n    return details;\n}\n\nexport const getCast = async (id) => {\n    const cast = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=6d41b19df2a832eaff610613527f11cf`);\n    return cast;\n}\n\nexport const getReviews = async (id) => {\n    const reviews = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=6d41b19df2a832eaff610613527f11cf`);\n    return reviews;\n}\n\nexport const searchMovie = async (query) => {\n    const reviews = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=6d41b19df2a832eaff610613527f11cf&query=${query}&language=en-US&page=1&include_adult=false`);\n    return reviews;\n}","import { getReviews } from \"Utils/MovieDB\"\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([])\n    const { id } = useParams();\n\n    useEffect(() => {\n        const load = async() => {\n            const data = await getReviews(id);\n            setReviews(data.data.results);\n        }\n        load();\n    }, [id])\n\n    return(\n        <>\n        {reviews.length ? \n        <ul>\n            {reviews.map(({author, content, id}) => (\n                <li key={id}>\n                    <p><b>Author: {author}</b></p>\n                    <p>{content}</p>\n                </li>\n            ))}\n        </ul>\n        \n        : <p>We don't have any reviews for this movie.</p>\n        }\n        </>\n    )\n}\n\nexport default Reviews"],"names":["getTrending","axios","trending","getDetails","id","details","getCast","cast","getReviews","reviews","searchMovie","query","useState","setReviews","useParams","useEffect","load","data","results","length","map","author","content"],"sourceRoot":""}